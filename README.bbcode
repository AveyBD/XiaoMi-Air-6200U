[b]Hackintosh Xiaomi Mi Air 13.3 Skylake-U 2016 for macOS Mojave, High Sierra[/b]

Hackintosh your XiaoMi Air 13.3 Skylake-U 2016. This is intented to create a fully functional hackintosh for the Xiaomi Mi Notebook Air 13.3'' i5-6200U (Skylake-U 2016).

[b]Important Notes[/b]
[list]
[*] This guide is for the [b]XiaoMi Air 13.3 Skylake-U 2016[/b]. It will probably work on the [b]XiaoMi Air 13.3 Kaby Lake-R 2018[/b] models with minor modifications.
[*] All files used and detailed readmes are located in github [url=https://github.com/sakoula/XiaoMi-Air-6200U/blob/master/Changelog.md]sakoula/XiaoMi-Air-6200U[/url]
[*] The guide will work for either [b]BIOS A05[/b] or [b]BIOS A06[/b]
[*] Following this guide you can run [b]High Sierra 10.13.6[/b] or any version of [b]Mojave 10.14.x[/b]
[*] macOS has been installed on a different disk on the second M.2 port of the laptop. I have no experience of having both Windows and macOS on a single disk. In order to boot to macOS you use [icode]F12[/icode] upon power on and select the boot device.
[*] In order to be able to help you please provide full debug information useing the excellent [url=https://github.com/black-dragon74/OSX-Debug]black-dragon74/OSX-Debug
[/url] tool.
[*] Support and Discussion on this guide can be found at [url=https://www.tonymacx86.com/threads/guide-xiaomi-mi-air-13-3-skylake-u-2016-1rst-gen.268979]tonymacx86[/url]
[/list]
Please note that this guide will be not possible without all the excellent resources:

[list]
[*] [url=https://www.insanelymac.com/forum/topic/319656-guide-xiaomi-mi-notebook-air-13/][Guide] XiaoMi Mi Notebook Air 13"[/url] by [i]JahStories[/i]
[*] [url=https://github.com/daliansky/XiaoMi-Pro]XiaoMi NoteBook Pro for macOS Mojave, High Sierra, Sierra [/url] by *[url=https://github.com/daliansky]daliansky[/url]* amd *[url=https://github.com/stevezhengshiqi]stevezhengshiqi[/url]*
[*] All the [b]super amazing guides[/b] from [url=https://www.tonymacx86.com/members/rehabman.429483/]RehabMan[/url]
[*] [url=https://github.com/johnnync13/Xiaomi-Notebook-Air-1Gen]Air guide[/url] by [url=https://github.com/johnnync13]johnnync13[/url]
[/list]

[b]1. Known Issues / Work in Progress[/b]
[list]
[*] Multitouch Gestures [i]work in progress through VoodooI2c[/i]
[*] Internal Wifi is not working [i]see Wi-Fi section for alternatives[/i]
[*] improve bettery life using a [icode]CPUFriendDataProvider.kext[/icode]
[*] When sleeping by closing LID on wake loosing USB
[*] Shutdown is not working as expected. The on/off button's led stays up and the keyboard light is on when touching it. In order to switch off you have to hold the shutdown key for 4 seconds.
[*] Bluetooth works if using a VM to inject the FW
[*] After Sleep distorted or know audio from Headphones Port [i]work in progress using ALCPlugFix[/i]
[*] Enable HiDPI resolutions [i]work in progress although the LCD is not retina and will not help[/i]
[/list]
If you face another problem please open a issue.

[b]2. Hardware Specifications[/b]
[list]
[*] Skylake-U 2016
[*] Xiaomi Mi Notebook Air 13.3''
[*] Bios vers A06
[*] CPU Intel Core i5-6200U /  2.7GHz max /  Dual core, 4 threads /  3MB L3 cache
[*] GPU: HD Graphics 520
[*] GPU: Nvidia GeForce 940MX GPU / 1G GDDR5 RAM, frequency 5GHz
[*] Memory: 8192 MB DDR4 2133 MHz, single-channel, firmly fitted
[*] Display: 13.3 inch 16:9, 1920 x 1080 pixel 166 PPI, Samsung LTN133HL09-M01, IPS, glossy: yes
[*] Samsung PM951 NVMe MZVLV256, 256 GB (on first SLOT which is PCie/NVMe)
[*] Samsung 850 Evo Series, 500GB M.2 SSD (MZ-N5E500BW) (on second SLOT which is SATA) (for macOS)
[*] WIFI: Intel Dual Band Wireless-AC 2x2 Network / 2.4GHz and 5GHz dual-band WiFi / 802.11ac / 802.11b/g/n /  867Mbps max
[*] Bluetooth: Bluetooth 4.1 wireless technology
[*] Connectivity: USB Type-C charging port, 2× USB 3.0, 1× HDMI, 3,5 mm audio jack
[/list]

[b]3. Installation Guide[/b]
These are the steps in order to install or upgrade your XiaoMi-Air. There is a very detailed document on the steps followed and the customizations which can be found in [url=https://github.com/sakoula/XiaoMi-Air-6200U/blob/master/DETAILS.md]DETAILS.md[/url].

There is a another document on how I setup my environment including all the tools and utilities I have used [url=https://github.com/sakoula/XiaoMi-Air-6200U/blob/master/ENVIRONMENT.md]ENVIRONMENT.md[/url].

You will need a working macOS installation (no matter the version) to create a USB Flash Drive with macOS.

Start by downloading the latest version the customization files from the [url=https://github.com/sakoula/XiaoMi-Air-6200U/releases]releases[/url] page. It includes:
[list]
[*] [icode]AIR_EFI/[/icode]: efi directory including all kexts and customization needed
[*] [icode]addons/LiluFriendLite.kext[/icode]: [icode]LiluFriendLite.kext[/icode] used in the installation
[*] [icode]addons/HFSPlus.efi[/icode]: [icode]HFSPlus.efi[/icode] used in the installation
[*] [icode]addons/VirtualSmc.efi[/icode]: [icode]VirtualSmc.efi[/icode] used in the installation
[/list]

[b]3.1 Installation SSD[/b]
I installed a [icode]Samsung 850 Evo Series, 500GB M.2 SSD (MZ-N5E500BW)[/icode] specifically for macOS on the [b]second[/b] M.2 port. Use [icode]F12[/icode] to boot from a specific device.

[b]3.2 Disable Secure Boot[/b]
Hold [icode]F2[/icode] to get into the BIOS. In order to disable the secure boot you need to set a supervisor BIOS password. Use [icode]root[/icode] as a password. Without exiting disable the secure boot. Then change the supervisor password and do not enter a new one. This will disable it. Exit BIOS saving the options.

You do not have to change anything else from the defaults

[b]3.3 Preparing USB Flash Drive[/b]
[url=https://support.apple.com/en-us/HT201372]Get a at least 16GB[/url] USB Flash Drive and:

[icode]Disk Utility > Select USB Device > Erase[/icode]:
[list]
[*] GUID Partition Table
[*] Name: USB
[*] Format: MacOS Extended (Journaled)
[/list]

[b]3.4 Install mojave installer to the USB Flash Drive[/b]
Download mojave from Apple AppStore and run the following command to install it on the USB disk you just Erased.
[icode]$ sudo /Applications/Install\ macOS\ Mojave.app/Contents/Resources/createinstallmedia --volume /Volumes/USB[/icode]

[b]3.5 Install [icode]Clover[/icode] to the USB Flash Drive[/b]
Rehabman's fork of clover tends to be more stable so we are goinf to use this. Download it from [url=https://bitbucket.org/RehabMan/clover/downloads/]here[/url].

Run [icode]Clover_v2.4k_r4701.RM-4963.ca6cca7c[/icode] installer:

[i]Clover for UEFI booting only[/i], [i]Install Clover in the ESP[/i]

[i]UEFI Drivers[/i] / [icode]drivers64UEFI[/icode]:
[list]
[*] [icode]ApfsDriverLoader-64.efi[/icode]
[*] [icode]AppleImageLoader-64.efi[/icode]
[*] [icode]AptioMemoryFix-64.efi[/icode]
[*] [icode]DataHubDxe-64.efi[/icode]
[*] [icode]FSInject-64.efi[/icode]
[/list]
[i]FileVault 2 UEFI Drivers[/i] / [icode]drivers64UEFI[/icode]:
[list]
[*] [icode]AppleKeyFeeder-64.efi[/icode]
[*] [icode]AppleUISupport-64.efi[/icode]
[*] [icode]AptioInputFix-64.efi[/icode]
[/list]

[b]3.6 Customize Clover on the USB Flash Drive[/b]
Download the latest [url=https://github.com/sakoula/XiaoMi-Air-6200U/releases]release[/url] from github and unzip the archive. You will find an [icode]AIR_EFI[/icode] directory and a [icode]addons[/icode] directory. Mount the USB Flash Drive's [icode]EFI[/icode] partition on [icode]/Volumes/EFI[/icode]:
[list]
[*] copy [icode]AIR_EFI/CLOVER/kexts/Other[/icode] from the downloaded file to USB's EFI to [icode]EFI/CLOVER/kexts/Other[/icode]
[*] make sure that on the USB's EFI [icode]EFI/CLOVER/kexts/Other[/icode] you just have [icode]Lilu.kext[/icode], [icode]WhateverGreen.kext[/icode], [icode]VoodooPS2Controller.kext[/icode], [icode]VirtualSMC.kext[/icode], [icode]SATA-unsupported.kext[/icode], [icode]USBPorts.kext[/icode]. [b]Erase the rest[/b].
[*] copy [icode]addons/HFSPlus.efi[/icode] from the downloaded file to USB's EFI to [icode]EFI/CLOVER/drivers64UEFI/HFSPlus.efi[/icode]
[*] copy [icode]addons/VirtualSmc.efi[/icode] from the downloaded file to USB's EFI to [icode]EFI/CLOVER/drivers64UEFI/VirtualSmc.efi[/icode]
[*] copy [icode]AIR_EFI/CLOVER/ACPI/PATCHED/*[/icode] from the downloaded file to USB's EFI to [icode]EFI/CLOVER/ACPI/PATCHED/*[/icode]
[*] copy [icode]AIR_EFI/CLOVER/config.plist[/icode] from the downloaded file to USB's EFI to [icode]EFI/CLOVER/ACPI/config.plist[/icode]
[/list]

[b]3.7 Install Mojave[/b]
To boot from the USB Flash Drive you can just hit [icode]F12[/icode] and you will get the UEFI boot loader

Boot from the USB and install Mojave on the hard disk.

If your Xiaomi-Air already runs High Sierra 10.13.6 you can upgrade directly to Mojave using the installer from the AppleStore (no need of a USB Flash Drive).

[quote]
[b]Important[/b]: During installation you will ask to reboot the machine. While on clover make sure to boot from [icode]Boot macOS install from *** disk[/icode] disk. If you do not see this disk hit [icode]F3[/icode] to show all the hidden disks. You may need to reboot multiple times.
[/quote]

[b]3.8 Install [icode]Clover[/icode] on the macOS disk[/b]
Once the installation is over you will need to install [icode]Clover[/icode] bootloader on the hard disk that you have installed macOS in order to be able to boot without the USB Flash Drive.

Run again the [icode]Clover_v2.4k_r4701.RM-4963.ca6cca7c[/icode] installer:
[i]Clover for UEFI booting only[/i], [i]Install Clover in the ESP[/i]

[i]UEFI Drivers[/i] / [icode]drivers64UEFI[/icode]:
[list]
[*] [icode]ApfsDriverLoader-64.efi[/icode]
[*] [icode]AppleImageLoader-64.efi[/icode]
[*] [icode]AptioMemoryFix-64.efi[/icode]
[*] [icode]DataHubDxe-64.efi[/icode]
[*] [icode]FSInject-64.efi[/icode]
[/list]
[i]FileVault 2 UEFI Drivers[/i] / [icode]drivers64UEFI[/icode]:
[list]
[*] [icode]AppleKeyFeeder-64.efi[/icode]
[*] [icode]AppleUISupport-64.efi[/icode]
[*] [icode]AptioInputFix-64.efi[/icode]
[/list]
[i]Install Clover Preference Pane[/i]

[b]3.9 Customize Clover on the macOS disk[/b]
Download the latest [url=https://github.com/sakoula/XiaoMi-Air-6200U/releases]release[/url] from github and unzip the archive. You will find an [icode]AIR_EFI[/icode] directory and a [icode]addons[/icode] directory.

Mount the EFI partition of the macOS boot parition on [icode]/Volumes/EFI[/icode]:
[list]
[*] copy [icode]AIR_EFI/CLOVER/kexts/Other[/icode] from the downloaded file to USB's EFI to [icode]EFI/CLOVER/kexts/Other[/icode]
[*] copy [icode]addons/HFSPlus.efi[/icode] from the downloaded file to USB's EFI to [icode]EFI/CLOVER/drivers64UEFI/HFSPlus.efi[/icode]
[*] copy [icode]addons/VirtualSmc.efi[/icode] from the downloaded file to USB's EFI to [icode]EFI/CLOVER/drivers64UEFI/VirtualSmc.efi[/icode]
[*] copy [icode]AIR_EFI/CLOVER/ACPI/PATCHED/*[/icode] from the downloaded file to USB's EFI to [icode]EFI/CLOVER/ACPI/PATCHED/*[/icode]
[*] copy [icode]AIR_EFI/CLOVER/config.plist[/icode] from the downloaded file to USB's EFI to [icode]EFI/CLOVER/ACPI/config.plist[/icode]
[/list]

[b]3.10 Move kexts to [icode]/Library/Extentions[/icode][/b]
The right way to load kexts is [b]not[/b] by injecting them through clover but installing them in [icode]/Library/Extentions[/icode] and building them into the kernel cache.

Download the latest [url=https://github.com/sakoula/XiaoMi-Air-6200U/releases]release[/url] from github and unzip the archive. You will find an [icode]AIR_EFI[/icode] directory and a [icode]addons[/icode] directory.

Mount the EFI partition of the macOS boot parition on [icode]/Volumes/EFI[/icode]:
[list]
[*] [b]move[/b] [icode]EFI/CLOVER/kexts/Other/*[/icode] from macOS boot parition to [icode]/Library/Extentions/*[/icode]
[*] run from the console [icode]$ sudo chown -R root:wheel /Library/Extentions/*[/icode]
[*] run from the console [icode]$ sudo chmod -r 755 /Library/Extentions/*[/icode]
[*] run from the console [icode]$ sudo kextcache -i /[/icode] to rebuild the caches
[*] [b]move[/b] [icode]addons/LiluFriendLite.kext[/icode] from the downloaded file to [icode]/Library/Extentions/LiluFriendLite.kext[/icode]
[*] run from the console [icode]$ sudo chown -R root:wheel /Library/Extentions/*[/icode]
[*] run from the console [icode]$ sudo chmod -r 755 /Library/Extentions/*[/icode]
[*] run from the console [icode]$ sudo kextcache -i /[/icode] to rebuild the caches
[/list]
[b]remember[/b] that [icode]kextcache[/icode] needs to be run twice

[b]3.11 Create a USB Flash Drive just with [icode]Clover[/icode] for emergencies[/b]
Get a small (2GB will work just fine) USB Flash Drive and:

[icode]Disk Utility > Select USB Device > Erase[/icode]:
[list]
[*] GUID Partition Table
[*] Name: CLOVER
[*] Format: MS-DOS-FAT
[/list]
Run the [icode]Clover_v2.4k_r4701.RM-4963.ca6cca7c[/icode] installer:

[i]Clover for UEFI booting only[/i], [i]Install Clover in the ESP[/i]

[i]UEFI Drivers[/i] / [icode]drivers64UEFI[/icode]:
[list]
[*] [icode]ApfsDriverLoader-64.efi[/icode]
[*] [icode]AppleImageLoader-64.efi[/icode]
[*] [icode]AptioMemoryFix-64.efi[/icode]
[*] [icode]DataHubDxe-64.efi[/icode]
[*] [icode]FSInject-64.efi[/icode]
[/list]
[i]FileVault 2 UEFI Drivers[/i] / [icode]drivers64UEFI[/icode]:

[list]
[*] [icode]AppleKeyFeeder-64.efi[/icode]
[*] [icode]AppleUISupport-64.efi[/icode]
[*] [icode]AptioInputFix-64.efi[/icode]
[/list]
Download the latest [url=https://github.com/sakoula/XiaoMi-Air-6200U/releases]release[/url] from github and unzip the archive. You will find an [icode]AIR_EFI[/icode] directory and a [icode]addons[/icode] directory. Mount the USB Flash Drive's [icode]EFI[/icode] partition on [icode]/Volumes/EFI[/icode]:

[list]
[*] copy [icode]AIR_EFI/CLOVER/kexts/Other[/icode] from the downloaded file to USB's EFI to [icode]EFI/CLOVER/kexts/Other[/icode]
[*] make sure that on [icode]EFI/CLOVER/kexts/Other[/icode] you just have [icode]Lilu.kext[/icode], [icode]WhateverGreen.kext[/icode], [icode]VoodooPS2Controller.kext[/icode], [icode]VirtualSMC.kext[/icode], [icode]SATA-unsupported.kext[/icode], [icode]USBPorts.kext[/icode]. Erase the rest
[*] copy [icode]addons/HFSPlus.efi[/icode] from the downloaded file to USB's EFI to [icode]EFI/CLOVER/drivers64UEFI/HFSPlus.efi[/icode]
[*] copy [icode]addons/VirtualSmc.efi[/icode] from the downloaded file to USB's EFI to [icode]EFI/CLOVER/drivers64UEFI/VirtualSmc.efi[/icode]
[*] copy [icode]AIR_EFI/CLOVER/ACPI/PATCHED/*[/icode] from the downloaded file to USB's EFI to [icode]EFI/CLOVER/ACPI/PATCHED/*[/icode]
[*] copy [icode]AIR_EFI/CLOVER/config.plist[/icode] from the downloaded file to USB's EFI to [icode]EFI/CLOVER/ACPI/config.plist[/icode]
[*] edit [icode]config.plist[/icode] change the [icode]SystemParameters[/icode]:
[/list]

[code=xml]
<dict>
<key>InjectKexts</key>
<string>Detect</string>
<key>InjectSystemID</key>
<true/>
</dict>
[/code]

[b]4. Postinstallation Steps[/b]
[list]
[*] Install ALCPlugFix [i]work in progress[/i]
[*] Enable HiDPI resolutions [i]work in progress[/i]
[*] create a valid SMBIOS. Follow the guide [url=https://www.tonymacx86.com/threads/an-idiots-guide-to-imessage.196827/]An iDiot's Guide To iMessage [/url]
[/list]

[b]5. Patching Information[/b]
Patching has been done using clover and [url=https://www.tonymacx86.com/threads/guide-using-clover-to-hotpatch-acpi.200137/]hotpatching ACPI[/url]. All the required files exist in the [icode]AIR_EFI[/icode] directory:
[list]
[*] [icode]CLOVER/config.plist[/icode] clover configuration file
[*] [icode]CLOVER/ACPI/origin[/icode] BIOS A06 ACPI aml files (from CLOVER with F4)
[*] [icode]CLOVER/ACPI/patched[/icode] ACPI hotpaches
[*] [icode]CLOVER/kexts/Other[/icode] kexts required
[/list]

[b]5.1 CPU[/b]
[list]
[*] The model is [icode]i5-6200U[/icode], and XCPM power management is native supported.
[*] HWP is supported as well through a custom [icode]CPUFriendDataProvider.kext[/icode] [i]work in progress[/i]
[/list]

kext patches in [icode]/CLOVER/kexts/Other[/icode] applied:
[list]
[*] [icode]Lilu.kext[/icode] Arbitrary kext and process patching on macOS
[*] [icode]HibernationFixup.kext[/icode] Lilu plugin intended to fix hibernation compatibility issues
[*] [icode]NullEthernet.kext[/icode] Null Ethernet Network Driver by RehabMan
[*] [icode]CPUFriend.kext[/icode] Dynamic macOS CPU power management data injection
[*] [icode]CPUFriendDataProvider.kext[/icode] custom CPU power management provider for i5-6200U
[*] [icode]ACPIBatteryManager.kext[/icode] Advanced Configuration and Power Interface (ACPI) based battery manager kernel extension
[*] [icode]VirtualSMC.kext[/icode] SMC emulator layer
[*] [icode]SATA-unsupported.kext[/icode] SATA unsupported
[/list]

ACPI patches in [icode]/CLOVER/ACPI/patched[/icode] applied:
[list]
[*] [icode]SSDT-DMAC.aml[/icode] Add missing DMAC Device to enhace performance like a real Mac
[*] [icode]SSDT-HPET.aml[/icode] Disable HPET device by passing value 0 to HPTE to to behave more like a real Mac
[*] [icode]SSDT-MEM2.aml[/icode] Add missing MEM2 Device to enhace performance like a real Mac
[*] [icode]SSDT-PMCR.aml[/icode] Add missing PMCR Device to enhace performance like a real Mac
[*] [icode]SSDT-GPRW.aml[/icode] For solving instant wake by hooking GPRW
[*] [icode]SSDT-PNLF.aml[/icode] Adding PNLF device for BackLight related
[*] [icode]SSDT-RMCF.aml[/icode] Configuration data for other SSDTs(SSDT-GPRW and SSDT-PTSWAK)
[*] [icode]SSDT-LPC.aml[/icode] To fix unsupported 8-series LPC devices (0x9d48).
[*] [icode]SSDT-PTSWAK.aml[/icode] fixing sleep _PTS and _WAK
[*] [icode]SSDT-SMBUS.aml[/icode] add BUS0 device
[*] [icode]SSDT-PXSX.aml[/icode] Cosmetic Strings for Xiaomi Mi Notebook Air 13.3
[*] [icode]SSDT-XOSI.aml[/icode] Override for host defined _OSI to handle "Darwin"
[/list]

[b]5.2 Audio[/b]
[list]
[*] Sound card is [icode]Realtek ALC255[/icode] which is drived by [icode]AppleALC[/icode] on layout-id 30 or 99.
[/list]

kext patches in [icode]/CLOVER/kexts/Other[/icode] applied:
[list]
[*] [icode]AppleALC.kext[/icode] Native macOS HD audio for not officially supported codecs
[*] [icode]CodecCommander.kext[/icode] For waking up EAPD amp after sleep on OS X hackintosh
[/list]

[icode]config.plist[/icode] patch applied:
[list]
[*] Patch [icode]Devices > PciRoot(0x0)/Pci(0x1f,0x3)[/icode]
[/list]

[b]5.3 Bluetooth[/b]
The card in the laptop is [icode]Intel® Dual Band Wireless-AC 8260[/icode]
[list]
[*] Bluetooth works if using a VM to inject the FW
[/list]

[b]5.4 Ethernet[/b]
[list]
[*] Xiaomi-Air does not have an Ethernet. A USB one can be used and supported natively such as the [url=https://www.tp-link.com/us/products/details/cat-5523_UE300.html][icode]TP-LINK UE300[/icode][/url]
[/list]

[b]5.5 Graphics[/b]
[list]
[*] Discrete card is [icode]Nvidia GeForce 940MX[/icode], disabled by [icode]SSDT-DDGPU.aml[/icode] because macOS doesn't support Optimus technology.
[*] Supported card is [icode]Intel HD Graphics 520[/icode] supported with edits in [icode]config.plist[/icode]
[/list]

kext patches in [icode]/CLOVER/kexts/Other[/icode] applied:
[list]
[*] [icode]WhateverGreen.kext[/icode] Various patches necessary for certain ATI/AMD/Intel/Nvidia GPUs
[/list]

ACPI patches in [icode]/CLOVER/ACPI/patched[/icode] applied:
[list]
[*] [icode]SSDT-DDGPU.aml[/icode] disable discrete GPU
[*] [icode]SSDT-BKEY.aml[/icode] Native brightness hotkey support
[/list]

[icode]config.plist[/icode] patch applied:
[list]
[*] Patch [icode]Devices > PciRoot(0x0)/Pci(0x2,0x0)[/icode]
[/list]

[b]5.6 Keyboard[/b]
kext patches in [icode]/CLOVER/kexts/Other[/icode] applied:
[list]
[*] [icode]VoodooPS2Controller.kext[/icode] RehabMan work on keyboard
[/list]

[b]5.7 Touchpad[/b]
kext patches in [icode]/CLOVER/kexts/Other[/icode] applied:
[list]
[*] [icode]VoodooPS2Controller.kext[/icode] RehabMan work on keyboard
[/list]

[b]5.8 USB[/b]
[list]
[*] USB Port Patching uses [url=https://www.tonymacx86.com/threads/release-intel-fb-patcher-v1-4-1.254559]Intel FB-Patcher[/url], related file is located in [icode]/CLOVER/kexts/Other/USBPorts.kext[/icode].
[/list]
kext patches in [icode]/CLOVER/kexts/Other[/icode] applied:
[list]
[*] [icode]USBPorts.kext[/icode] through Intel FB-Patcher
[/list]

ACPI patches in [icode]/CLOVER/ACPI/patched[/icode] applied:
[list]
[*] [icode]SSDT-EC.aml[/icode] add EC0 device for usb power injection
[*] [icode]SSDT-USBX.aml[/icode] USB power properties via USBX device
[/list]

[b]5.9 Wi-Fi[/b]
The card in the laptop is [icode]Intel® Dual Band Wireless-AC 8260[/icode]
[list]
[*] Wifi is not working. Get a USB card such as [icode]TP-LINK TL-WN725N v3[/icode] and download drivers from the [url=https://www.tp-link.com/us/download/TL-WN725N.html]TP-LINK site[/url]
[/list]

[b]6. Changelog[/b]
You can view [url=https://github.com/sakoula/XiaoMi-Air-6200U/blob/master/Changelog.md]Changelog.md[/url] for detailed information.

[b]Buy me a coffee or a beer[/b]

If you feel so you can [url=http://google.com]buy me[/url] a coffee or a beer!

[b]7. Credits[/b]
[list]
[*] Thanks to [url=https://www.insanelymac.com/forum/topic/319656-guide-xiaomi-mi-notebook-air-13/]JahStories[/url], Jolly, gengik84 that provided the [url=https://www.insanelymac.com/forum/topic/319656-guide-xiaomi-mi-notebook-air-13/]original post[/url] that made this guide feasible.
[*] Thanks to [url=https://github.com/stevezhengshiqi]stevezhengshiqi[/url] and [url=https://github.com/daliansky]daliansky[/url] for the amazing guide of [url=https://github.com/daliansky/XiaoMi-Pro/commits?author=stevezhengshiqi]Xiaomi-Pro[/url] that also made this guide feasible.
[*] Thanks to [url=https://pikeralpha.wordpress.com/]Piker-Alpha[/url]
[*] Thanks to [url=https://github.com/acidanthera]vit9696/Acidanthera[/url] for providing [url=https://github.com/acidanthera/AppleALC]AppleALC[/url], [url=https://github.com/acidanthera/CPUFriend]CPUFriend[/url], [url=https://github.com/acidanthera/HibernationFixup]HibernationFixup[/url], [url=https://github.com/acidanthera/Lilu]Lilu[/url], [icode]USBPorts[/icode], [url=https://github.com/acidanthera/VirtualSMC]VirtualSMC[/url], and [url=https://github.com/acidanthera/WhateverGreen]WhateverGreen[/url].
[*] Thanks to [url=https://github.com/alexandred]alexandred[/url] and [url=https://github.com/hieplpvip]hieplpvip[/url] for providing [url=https://github.com/alexandred/VoodooI2C]VoodooI2C[/url].
[*] Thanks to [url=https://sourceforge.net/u/apianti]apianti[/url], [url=https://sourceforge.net/u/blackosx]blackosx[/url], [url=https://sourceforge.net/u/blusseau]blusseau[/url], [url=https://sourceforge.net/u/dmazar]dmazar[/url], and [url=https://sourceforge.net/u/slice2009]slice2009[/url] for providing [url=https://sourceforge.net/projects/cloverefiboot]Clover[/url].
[*] Thanks to [url=https://github.com/RehabMan]RehabMan[/url] for providing [url=https://github.com/RehabMan/EAPD-Codec-Commander]EAPD-Codec-Commander[/url], [url=https://github.com/RehabMan/OS-X-Clover-Laptop-Conf]OS-X-Clover-Laptop-Config[/url], [url=https://github.com/RehabMan/OS-X-Null-Ethernet]OS-X-Null-Ethernet[/url], [url=https://github.com/RehabMan/OS-X-ACPI-Battery-Driver]OS-X-ACPI-Battery-Driver[/url], [url=https://github.com/RehabMan/OS-X-Voodoo-PS2-Controller]OS-X-Voodoo-PS2-Controller[/url], and [url=https://github.com/RehabMan/hack-tools/tree/master/kexts/SATA-unsupported.kext]SATA-unsupported[/url] and all the amazing help in the forums.
[*] Thanks to [url=https://github.com/johnnync13]johnnync13[/url] for his guide [url=https://github.com/johnnync13/Xiaomi-Notebook-Air-6200u]Xiaomi-Notebook-Air-6200u[/url]
[/list]
